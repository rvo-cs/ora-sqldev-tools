<?xml version="1.0" encoding="UTF-8" ?>
<displays>
<folder>
<name><![CDATA[AWR]]></name>
<display id="28b35eff-0167-1000-8006-c0a83801697b" type="" style="Table" enable="true">
	<name><![CDATA[Histo ASH - Covering AWR snapshots]]></name>
	<description><![CDATA[Retrieves the snapshot IDs of AWR snapshots covering the specified time range.
Builds a WHERE clause condition for querying DBA_HIST_ACTIVE_SESS_HISTORY efficiently on that time range
(WRH$_ACTIVE_SESSION_HISTORY is range-partitioned by DBID, SNAP_ID).
]]></description>
	<tooltip><![CDATA[]]></tooltip>
	<drillclass><![CDATA[]]></drillclass>
	<CustomValues>
		<TYPE><![CDATA[horizontal]]></TYPE>
	</CustomValues>
	<query>
		<sql><![CDATA[with 
awr_snapshots as (
    select
        dbid, 
        instance_number, 
        cast(startup_time as date) as inst_startup_time, 
        case 
            when startup_time = lag(startup_time) 
                    over (partition by dbid, instance_number order by snap_id) 
            then '0' else '1' end as startup_indic,
        snap_id, 
        cast(begin_interval_time as date) as begin_interval_time, 
        cast(end_interval_time as date) as end_interval_time, 
        end_interval_time - begin_interval_time as snap_duration,
        snap_level, 
        error_count, 
        snap_flag, 
        flush_elapsed, 
        snap_timezone
    from
        dba_hist_snapshot
    where
        (lnnvl(upper(:CURRENT_DBID_ONLY) = 'Y') or dbid = (select dbid from v$database))
        and (lnnvl(upper(:CURRENT_INSTANCE_ONLY) = 'Y') or instance_number = sys_context('USERENV', 'INSTANCE'))
        and (:INST_ID is null or instance_number = :INST_ID)
        and (:FROM_TIME is null or end_interval_time >= to_date(:FROM_TIME, 'YYYY-MM-DD HH24:MI:SS'))
        and (:TO_TIME is null or begin_interval_time <= to_date(:TO_TIME, 'YYYY-MM-DD HH24:MI:SS'))
),
awr_snapshots_wt_startup_count as (
    select
        dbid, instance_number, inst_startup_time, 
        sum(startup_indic) over (partition by dbid, instance_number order by snap_id
                rows between unbounded preceding and current row) 
            as cnt_startup, 
        snap_id, begin_interval_time, end_interval_time, 
        snap_duration, snap_level, error_count, 
        snap_flag, flush_elapsed, snap_timezone
    from
        awr_snapshots
),
awr_snapshots_wt_restart_flag as (
    select
        dbid, instance_number, inst_startup_time, cnt_startup,
        case 
            when count(distinct cnt_startup) over (partition by dbid, instance_number) > 1
            then 'Y' end as restart_flag,
        case
            when count(distinct cnt_startup) over (partition by dbid, instance_number) > 1
                or (:FROM_TIME is not null 
                    and min(begin_interval_time) over (partition by dbid, instance_number)
                        > to_date(:FROM_TIME, 'YYYY-MM-DD HH24:MI:SS'))
                or (:TO_TIME is not null 
                    and max(end_interval_time) over (partition by dbid, instance_number)
                        < to_date(:TO_TIME, 'YYYY-MM-DD HH24:MI:SS'))
            then 'Y' end as partial_cover_flag,            
        snap_id, begin_interval_time, end_interval_time, 
        snap_duration, snap_level, error_count,
        snap_flag, flush_elapsed, snap_timezone
    from
        awr_snapshots_wt_startup_count
)
select 
    dbid, 
    instance_number as inst_id, 
    min(snap_id) as begin_snap_id,
    max(snap_id) as end_snap_id,
    count(distinct snap_id) as snap_cnt,
    restart_flag as "Restarted?", 
    partial_cover_flag as "Part. coverage?",
    min(begin_interval_time) as begin_interval_time,
    to_date(:FROM_TIME, 'YYYY-MM-DD HH24:MI:SS') as from_time,
    to_date(:TO_TIME, 'YYYY-MM-DD HH24:MI:SS') as to_time,
    max(end_interval_time) as end_interval_time,
    'dbid = ' 
            || case when upper(:CURRENT_DBID_ONLY) = 'Y' 
                    then '(select dbid from v$database)' 
                    else to_char(dbid) end
            || chr(10) || 'and instance_number = '
            || case when :INST_ID is not null 
                        then :INST_ID
                    when upper(:CURRENT_INSTANCE_ONLY) = 'Y' 
                        then q'[sys_context('USERENV', 'INSTANCE')]'
                    else 
                        to_char(instance_number) end
            || chr(10) || 'and snap_id between ' || min(snap_id) || ' and ' || max(snap_id)
            || case when :FROM_TIME is not null 
                    then chr(10) || 'and sample_time >= to_date(''' || :FROM_TIME || ''', ''YYYY-MM-DD HH24:MI:SS'')' end
            || case when :TO_TIME is not null 
                    then chr(10) || 'and sample_time <= to_date(''' || :TO_TIME || ''', ''YYYY-MM-DD HH24:MI:SS'')' end
        as histo_ash_cond
from
    awr_snapshots_wt_restart_flag
where
    (upper(:ALLOW_RESTART) = 'Y' or restart_flag is null)
    and (upper(:ALLOW_PARTIAL_COVER) = 'Y' or partial_cover_flag is null)
group by
    dbid, instance_number, 
    restart_flag, partial_cover_flag]]></sql>
		<binds>
			<bind id="CURRENT_DBID_ONLY">
				<prompt><![CDATA[Current DBID only?]]></prompt>
				<tooltip><![CDATA[Restrict to the current DBID if 'Y']]></tooltip>
				<value><![CDATA[Y]]></value>
				<bracket><![CDATA[null]]></bracket>
			</bind>
			<bind id="CURRENT_INSTANCE_ONLY">
				<prompt><![CDATA[Current instance only?]]></prompt>
				<tooltip><![CDATA[Restrict to the current instance if 'Y']]></tooltip>
				<value><![CDATA[Y]]></value>
				<bracket><![CDATA[null]]></bracket>
			</bind>
			<bind id="INST_ID">
				<prompt><![CDATA[Instance id?]]></prompt>
				<tooltip><![CDATA[Restrict to the specified instance]]></tooltip>
				<value><![CDATA[NULL_VALUE]]></value>
				<bracket><![CDATA[null]]></bracket>
			</bind>
			<bind id="FROM_TIME">
				<prompt><![CDATA[From time?]]></prompt>
				<tooltip><![CDATA[From time (YYYY-MM-DD HH24:MI:SS)]]></tooltip>
				<value><![CDATA[2021-11-30 17:30:00]]></value>
				<bracket><![CDATA[null]]></bracket>
			</bind>
			<bind id="TO_TIME">
				<prompt><![CDATA[To time?]]></prompt>
				<tooltip><![CDATA[To time (YYYY-MM-DD HH24:MI:SS)]]></tooltip>
				<value><![CDATA[2021-11-30 21:30:00]]></value>
				<bracket><![CDATA[null]]></bracket>
			</bind>
			<bind id="ALLOW_RESTART">
				<prompt><![CDATA[Allow instance restarts?]]></prompt>
				<tooltip><![CDATA[Unless 'Y', show no result if an instance restart has happened]]></tooltip>
				<value><![CDATA[NULL_VALUE]]></value>
				<bracket><![CDATA[null]]></bracket>
			</bind>
			<bind id="ALLOW_PARTIAL_COVER">
				<prompt><![CDATA[Allow partial time coverage?]]></prompt>
				<tooltip><![CDATA[Unless 'Y', show no result if the specified time range is not fully covered]]></tooltip>
				<value><![CDATA[NULL_VALUE]]></value>
				<bracket><![CDATA[null]]></bracket>
			</bind>
		</binds>
	</query>
</display>
</folder>
</displays>
